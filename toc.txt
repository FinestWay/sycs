// Practical 1:  Write a program for tokenization of given input.

import java.util.Scanner;

public class prac1 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter your String: ");
        String str = scanner.nextLine();
        String[] arr = str.split("\\s+");
        System.out.println("Tokenized Strings are => ");
        for (int i = 0; i < arr.length; i++) {
            System.out.println("Token[" + i + "] = " + arr[i]);
        }
        scanner.close();
    }
}

_____________________________________________________________________________________________________________


// Practical 2:  Design a program for creating machine that accept three conscutive one's.

import java.util.Scanner;

public class prac2 {
    public static void main(String args[]){
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a String: ");
        String str = scanner.nextLine();
        char[] ch = str.toCharArray();
        if(ch.length == 3){
            if(ch[0] == '1' && ch[1] == '1' && ch[2] == '1'){
                System.out.println("String " + str + " is accepted");
            }
            else{
                System.out.println("String " + str  + " is not accepted");
            }
        }
        else{
            System.out.println("Enter a string of valid length");
        }

        scanner.close();

    }
}

_____________________________________________________________________________________________________________


// Practical 3:  Write a program  for creating a machine that accepts the strings always ending ending with '101'

import java.util.Scanner;

public class prac3 {
    public static void main(String args[]){
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter the String: ");
        String str = scanner.nextLine();
        if (str.length() >= 3) {
            if (str.endsWith("101")) {
                System.out.println("String is accepted.");
            }
            else{
                System.out.println("String is not acceptable.");
            }
        }
        else{
            System.out.println("Enter a valid length of string.");
        }
        scanner.close();
    }
}

_____________________________________________________________________________________________________________


// Practical 4: Design a program for accepting a decimal numbers divisible by 2.

import java.util.Scanner;

public class prac4 {
    public static void main(String args[]) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter the float number: ");
        float floatNum = scanner.nextFloat();
        scanner.close();

        int num = (int) (floatNum * 1000);

        if (num % 2 == 0) {
            System.out.println("The number " + floatNum + " is divisible by 2.");
        } else {
            System.out.println("The number " + floatNum + " is not divisible by 2.");
        }
    }
}


_____________________________________________________________________________________________________________

// Practical 5: Design a program for creating a machine which accepts strings having equal no of 1's and 0's

import java.util.Scanner;

public class prac5 {
    public static void main(String args[]) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter the string: ");
        String str = scanner.nextLine();

        int countOnes = 0;
        int countZeros = 0;

        for (int i = 0; i < str.length(); i++) {
            char ch = str.charAt(i);
            if (ch == '0') {
                countZeros++;
            } else if (ch == '1') {
                countOnes++;
            }
        }

        if (countOnes == countZeros) {
            System.out.println("The number of 1's and 0's are equal.");
        }
        else{
            System.out.println("The number of 0's and 1's are not equal.");
        }

        scanner.close();
    }
}


_____________________________________________________________________________________________________________


// Practical 6:  Design a program for Creating a machine which counts the number of 1's and 0's in a given string.

import java.util.Scanner;

public class prac6 {
    public static void main(String args[]){
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter your String: ");
        String str = scanner.nextLine();

        int countOnes = 0;
        int countZeros = 0;
        
        for(int i = 0; i < str.length(); i++){
            char ch = str.charAt(i);
            if(ch == '1'){
                countOnes++;
            }
            else if(ch == '0'){
                countZeros++;
            }
        }

        System.out.println("The number of 1's = " + countOnes);
        System.out.println("The number of 0's = " + countZeros);
        scanner.close();
    }
}

_____________________________________________________________________________________________________________


// Practical 7: Implement Deterministic PushDown Automata for {L = a^n b^n | n > = 0}

import java.util.Scanner;

public class DPDA {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter the string to check:");
        String input = scanner.nextLine();
        scanner.close();

        int countA = 0;
        for (char c : input.toCharArray()) {
            if (c == 'a') {
                countA++;
            } else if (c == 'b') {
                countA--;
                if (countA < 0) {
                    break;
                }
            }
        }

        if (countA == 0) {
            System.out.println("The string belongs to the language L = {a^n b^n | n >= 0}");
        } else {
            System.out.println("The string does not belong to the language L = {a^n b^n | n >= 0}");
        }
    }
}


_____________________________________________________________________________________________________________

// Practical 8: Parsing Using DFA

public class DFAParser {
    public static void main(String[] args) {
        // Define the DFA transitions as a 2D array
        int[][] transitions = {
            {1, 2},    
            {1, 3},    
            {2, 2},     
            {1, 4}      
        };

        int[] acceptingStates = {1, 2, 4};

        String input = "aa";

        int currentState = 0;

        for (char c : input.toCharArray()) {
            // Convert the character to an integer representing the input alphabet
            int inputSymbol = c - 'a';

            currentState = transitions[currentState][inputSymbol];
        }

        if (isAcceptingState(currentState, acceptingStates)) {
            System.out.println("The input string is accepted by the DFA.");
        } else {
            System.out.println("The input string is not accepted by the DFA.");
        }
    }

    private static boolean isAcceptingState(int currentState, int[] acceptingStates) {
        for (int state : acceptingStates) {
            if (currentState == state) {
                return true;
            }
        }
        return false;
    }
}


